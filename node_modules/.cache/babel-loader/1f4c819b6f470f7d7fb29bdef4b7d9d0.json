{"remainingRequest":"D:\\mtp\\cloneadmin\\manajemen-app-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\mtp\\cloneadmin\\manajemen-app-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\mtp\\cloneadmin\\manajemen-app-vue\\src\\registerServiceWorker.js","dependencies":[{"path":"D:\\mtp\\cloneadmin\\manajemen-app-vue\\src\\registerServiceWorker.js","mtime":1555309616404},{"path":"D:\\mtp\\cloneadmin\\manajemen-app-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mtp\\cloneadmin\\manajemen-app-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\mtp\\cloneadmin\\manajemen-app-vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["/* eslint-disable no-console */\nimport { register } from 'register-service-worker'; // let deferredPrompt;\n// window.addEventListener('beforeinstallprompt', (e) => {\n//   // Prevent Chrome 67 and earlier from automatically showing the prompt\n//   e.preventDefault();\n//   // Stash the event so it can be triggered later.\n//   deferredPrompt = e;\n//   deferredPrompt.prompt();\n//   // Wait for the user to respond to the prompt\n//   deferredPrompt.userChoice\n//     .then((choiceResult) => {\n//       if (choiceResult.outcome === 'accepted') {\n//         console.log('User accepted the A2HS prompt');\n//       } else {\n//         console.log('User dismissed the A2HS prompt');\n//       }\n//       deferredPrompt = null;\n//     });\n// });\n// window.addEventListener('appinstalled', (evt) => {\n//   app.logEvent('a2hs', 'installed');\n// });\n// window.addEventListener('beforeinstallprompt', (e) => {\n//   // Prevent Chrome 67 and earlier from automatically showing the prompt\n//   e.preventDefault();\n//   // Stash the event so it can be triggered later.\n//   deferredPrompt = e;\n//   // Update UI notify the user they can add to home screen\n//   btnAdd.style.display = 'block';\n//   btnAdd.addEventListener('click', (e) => {\n//     // hide our user interface that shows our A2HS button\n//     btnAdd.style.display = 'none';\n//     // Show the prompt\n//     deferredPrompt.prompt();\n//     // Wait for the user to respond to the prompt\n//     deferredPrompt.userChoice\n//       .then((choiceResult) => {\n//         if (choiceResult.outcome === 'accepted') {\n//           console.log('User accepted the A2HS prompt');\n//         } else {\n//           console.log('User dismissed the A2HS prompt');\n//         }\n//         deferredPrompt = null;\n//       });\n//   });\n// });\n\nif (process.env.NODE_ENV === 'production') {\n  register(\"\".concat(process.env.BASE_URL, \"service-worker.js\"), {\n    ready: function ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n    registered: function registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached: function cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound: function updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated: function updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline: function offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error: function error(_error) {\n      console.error('Error during service worker registration:', _error);\n    }\n  });\n}",{"version":3,"sources":["D:\\mtp\\cloneadmin\\manajemen-app-vue\\src\\registerServiceWorker.js"],"names":["register","process","env","NODE_ENV","BASE_URL","ready","console","log","registered","cached","updatefound","updated","offline","error"],"mappings":"AAAA;AAEA,SACEA,QADF,QAEO,yBAFP,C,CAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,WAAIC,OAAO,CAACC,GAAR,CAAYE,QAAhB,wBAA6C;AACnDC,IAAAA,KADmD,mBAC3C;AACNC,MAAAA,OAAO,CAACC,GAAR,CACE,0DACA,+CAFF;AAID,KANkD;AAOnDC,IAAAA,UAPmD,wBAOtC;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,KATkD;AAUnDE,IAAAA,MAVmD,oBAU1C;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACD,KAZkD;AAanDG,IAAAA,WAbmD,yBAarC;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,KAfkD;AAgBnDI,IAAAA,OAhBmD,qBAgBzC;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACD,KAlBkD;AAmBnDK,IAAAA,OAnBmD,qBAmBzC;AACRN,MAAAA,OAAO,CAACC,GAAR,CAAY,+DAAZ;AACD,KArBkD;AAsBnDM,IAAAA,KAtBmD,iBAsB7CA,MAtB6C,EAsBtC;AACXP,MAAAA,OAAO,CAACO,KAAR,CAAc,2CAAd,EAA2DA,MAA3D;AACD;AAxBkD,GAA7C,CAAR;AA0BD","sourcesContent":["/* eslint-disable no-console */\r\n\r\nimport {\r\n  register\r\n} from 'register-service-worker'\r\n\r\n// let deferredPrompt;\r\n\r\n// window.addEventListener('beforeinstallprompt', (e) => {\r\n//   // Prevent Chrome 67 and earlier from automatically showing the prompt\r\n//   e.preventDefault();\r\n//   // Stash the event so it can be triggered later.\r\n//   deferredPrompt = e;\r\n\r\n//   deferredPrompt.prompt();\r\n//   // Wait for the user to respond to the prompt\r\n//   deferredPrompt.userChoice\r\n//     .then((choiceResult) => {\r\n//       if (choiceResult.outcome === 'accepted') {\r\n//         console.log('User accepted the A2HS prompt');\r\n//       } else {\r\n//         console.log('User dismissed the A2HS prompt');\r\n//       }\r\n//       deferredPrompt = null;\r\n//     });\r\n\r\n// });\r\n\r\n// window.addEventListener('appinstalled', (evt) => {\r\n//   app.logEvent('a2hs', 'installed');\r\n// });\r\n\r\n// window.addEventListener('beforeinstallprompt', (e) => {\r\n//   // Prevent Chrome 67 and earlier from automatically showing the prompt\r\n//   e.preventDefault();\r\n//   // Stash the event so it can be triggered later.\r\n//   deferredPrompt = e;\r\n//   // Update UI notify the user they can add to home screen\r\n//   btnAdd.style.display = 'block';\r\n//   btnAdd.addEventListener('click', (e) => {\r\n//     // hide our user interface that shows our A2HS button\r\n//     btnAdd.style.display = 'none';\r\n//     // Show the prompt\r\n//     deferredPrompt.prompt();\r\n//     // Wait for the user to respond to the prompt\r\n//     deferredPrompt.userChoice\r\n//       .then((choiceResult) => {\r\n//         if (choiceResult.outcome === 'accepted') {\r\n//           console.log('User accepted the A2HS prompt');\r\n//         } else {\r\n//           console.log('User dismissed the A2HS prompt');\r\n//         }\r\n//         deferredPrompt = null;\r\n//       });\r\n//   });\r\n\r\n// });\r\n\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    ready() {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n        'For more details, visit https://goo.gl/AFskqB'\r\n      )\r\n    },\r\n    registered() {\r\n      console.log('Service worker has been registered.')\r\n    },\r\n    cached() {\r\n      console.log('Content has been cached for offline use.')\r\n    },\r\n    updatefound() {\r\n      console.log('New content is downloading.')\r\n    },\r\n    updated() {\r\n      console.log('New content is available; please refresh.')\r\n    },\r\n    offline() {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    },\r\n    error(error) {\r\n      console.error('Error during service worker registration:', error)\r\n    }\r\n  })\r\n}"]}]}